<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">



	<!-- 静态注入，相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
	    <property name="arguments" ref="securityManager"/>
	</bean>
	
	
	
	<!-- web.xml中shiro的filter对应的bean -->
    <!-- Shiro 的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
		<property name="loginUrl" value="/html/login.html" />
		<property name="successUrl" value="/index/welcome" />
		<!-- 通过unauthorizedUrl指定没有权限操作时跳转页面-->
		<property name="unauthorizedUrl" value="/refuse.jsp" />
		<!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- 对静态资源设置匿名访问 -->
			   <!-- /** = anon所有url都可以匿名访问 -->
			    /** = anon
				/html/** = anon
				/account/** = anon
				/v2/**/=anon
                /swagger-resources/**=anon
                /swagger-ui.html/**=anon
               
                
                <!-- 请求 logout.action地址，shiro去清除session-->
				/logout = logout
				
				<!--/** = authc  所有url都必须认证通过才可以访问-->
				
				<!-- /** = user 记住我的所有url可以访问   /** = user  -->
				
			
				
			</value>
		</property>
	</bean>
	
	
	
	<!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="sampleRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <property name="cacheManager" ref="customShiroCacheManager"/>
    </bean>
	

	<!-- 授权 认证 -->
	<bean id="sampleRealm" class="com.car.app.carscraporder.shiro.realm.SampleRealm" >
	     <property name="credentialsMatcher" ref="credentialsMatcher"/>
	</bean>
	
	 <bean id="credentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
    </bean>
	
	 <!-- 用户缓存 -->
	<bean id="customShiroCacheManager" class="org.crazycake.shiro.RedisCacheManager" >
	    <property name="keyPrefix" value="shiro_redis_session:"/>
        <property name="redisManager" ref="redisClient"/>
	</bean>
	
	
	<bean id="redisClient" class="com.car.app.carscraporder.shiro.cache.ShiroRedisClient">
        <constructor-arg name="jedisPool" ref="jedisPool"/>
        <property name="expire" value="${redis.default.expire}"/>
    </bean>
	
	
		<!-- Session Manager -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		   <!-- 相隔多久检查一次session的有效性   -->
      <property name="sessionValidationInterval" value="1800000"/>  
	 	 <!-- session 有效时间为半小时 （毫秒单位）-->  
	  <property name="globalSessionTimeout" value="1800000"/>
	  <property name="sessionDAO" ref="customShiroSessionDAO"/>
	   <!-- session 监听，可以多个。 -->
	   <property name="sessionListeners">
	       <list>
	           <ref bean="customSessionListener"/>
	       </list>
	   </property>
	
		<!-- 会话Cookie模板 -->
	   <property name="sessionIdCookie" ref="sessionIdCookie"/>
	</bean>
	
	
	  <!--redisSessionDAO-->
    <bean id="customShiroSessionDAO" class="org.crazycake.shiro.RedisSessionDAO">
        <property name="redisManager" ref="redisClient"/>
    </bean>
    
    
    <!-- custom shiro session listener -->
	<bean id="customSessionListener" class="com.car.app.carscraporder.shiro.session.CustomSessionListener">
	     <property name="redisManager" ref="redisClient"/>
	</bean>
    
    

    
    <!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg value="v_v-s-ticket"/>
	    <property name="httpOnly" value="true"/>
	    <!--cookie的有效时间 -->
	    <property name="maxAge" value="-1"/>
   </bean>
	
	
	 <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('3AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
	
	
	<!-- 用户信息记住我功能的相关配置 -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg value="v_v-re-jbr"/>
	    <property name="httpOnly" value="true"/>
	    <property name="maxAge" value="2592000"/><!-- 30天时间，记住我30天 -->
	</bean>
       
       

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
          
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    
	   
       
       
</beans>

       